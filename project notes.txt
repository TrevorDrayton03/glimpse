####### TODO #######
- edit each image (jan 15th code) as part of uploading 
- user input for left eye, right eye, cup ratio as part of uploading
- GOPRO API https://github.com/KonradIT/goprowifihack?tab=readme-ov-file
- deployment onto a container which will go onto brendan's commputer
- temporary storage
- upload with message confirmation 3.24
- do i need to use an apache server at the end of the day or can i use the django default server?
- register functionality does not work
####################

install python 3 stable release for your OS

pip install django htmx.org libapache2-mod-wsgi-py3

django-admin startproject capstone_UI

if the application was not created in the project, use python manage.py startapp capstone_UI_app to create it 

python manage.py runserver

include HTMX into the HTML Templates <head>
    <!-- Include HTMX JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/htmx.org@latest/dist/htmx.js"></script>

    <!-- Include HTMX CSS (optional) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/htmx.org@latest/dist/htmx.css">

########## LOGIN / AUTHENTICATION ##########
include the following code in settings.py
    AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    ]

    LOGIN_URL = '/login/'

    LOGIN_REDIRECT_URL = '/home/'

    in models:
    class UserProfile(AbstractUser):
        def __str__(self):
            return self.username

########## IMAGE UPLOADING ##########
create a UserImage model for images
    from django.db import models
    from django.contrib.auth.models import User 

    class UserImage(models.Model):
        user = models.ForeignKey(User, on_delete=models.CASCADE)
        image = models.ImageField(upload_to='user_images/') # this requires pillows to be installed

########## URLS ##########
add to urls.py
    from capstone_UI_app import views
    urlpatterns = [
        path('', views.home_view, name='home')
    ]

########## DJANGO ADMINISTRATION ########## 

python manage.py createsuperuser

########## DB TABLES ##########
python manage.py makemigrations
python manage.py migrate

########## STATIC FILES FOR PRODUCTION ##########
python manage.py collectstatic

###### QUERY DB ######
python manage.py shell

from your_app.models import UploadedImage
UploadedImage.objects.all()

###### REGISTER MODEL TO ADMIN SITE ######
// admin.py
from django.contrib import admin
from .models import UploadedImage

admin.site.register(UploadedImage)

############ docker related commands
pip freeze > requirements.txt
docker-compose up --build

############ laptop create docker serve app using development server in container
docker run -it --rm python:3.11 /bin/sh

// laptop, creating the container for use
docker cp /path/to/host/directory my_container:/path/inside/container/
docker cp C:\Users\trevd\OneDrive\Documents\capstone_UI 825a9b374d8a:/var/www/html/capstone
cd /var/www/html/capstone/
pip install -r requirements.txt
docker commit 825a9b374d8a python:django-container

// running and using the container
docker run -it --rm -d -p 8000:8000 python:django-container
docker exec -it 9c40f60de9ed /bin/bash
python manage.py runserver 0.0.0.0:8000

############ production server docker setup with gunicorn

// add -D at end to make it a background process
gunicorn your_project.wsgi:application -c gunicorn_config.py

