####### TODO #######
- edit each image (jan 15th code) as part of uploading 
- user input for left eye, right eye, cup ratio as part of uploading
- researh temporary storage / storage constraints and implement
- GOPRO API https://github.com/KonradIT/goprowifihack?tab=readme-ov-file
- deployment onto a container which will go onto brendan's commputer
- temporary storage
- upload with message confirmation 3.24
- move front end and back end tool analysis in the report
- do i need to use an apache server at the end of the day or can i use the django default server?
- change 2.5 security considerations in the report   
####################

install python 3 stable release for your OS

pip install django htmx.org

django-admin startproject capstone_UI

if the application was not created in the project, use python manage.py startapp capstone_UI_app to create it 

python manage.py runserver

include HTMX into the HTML Templates <head>
    <!-- Include HTMX JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/htmx.org@latest/dist/htmx.js"></script>

    <!-- Include HTMX CSS (optional) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/htmx.org@latest/dist/htmx.css">

########## LOGIN / AUTHENTICATION ##########
include the following code in settings.py
    AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    ]

    LOGIN_URL = '/login/'

    LOGIN_REDIRECT_URL = '/home/'

    in models:
    class UserProfile(AbstractUser):
        def __str__(self):
            return self.username

########## IMAGE UPLOADING ##########
create a UserImage model for images
    from django.db import models
    from django.contrib.auth.models import User 

    class UserImage(models.Model):
        user = models.ForeignKey(User, on_delete=models.CASCADE)
        image = models.ImageField(upload_to='user_images/') # this requires pillows to be installed

########## URLS ##########
add to urls.py
    from capstone_UI_app import views
    urlpatterns = [
        path('', views.home_view, name='home')
    ]

########## DJANGO ADMINISTRATION ########## 

python manage.py createsuperuser

########## DB TABLES ##########
python manage.py makemigrations
python manage.py migrate

########## STATIC FILES FOR PRODUCTION ##########
python manage.py collectstatic

###### QUERY DB ######
python manage.py shell

from your_app.models import UploadedImage
UploadedImage.objects.all()

###### REGISTER MODEL TO ADMIN SITE ######
// admin.py
from django.contrib import admin
from .models import UploadedImage

admin.site.register(UploadedImage)
